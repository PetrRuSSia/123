#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        TD_1: TD_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_1";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp ENTER>;
        };

        TD_2: TD_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_2";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp LALT>;

            tapping-term-ms = <300>;
        };

        TD_3: TD_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_3";
            #binding-cells = <0>;
            bindings = <&kp LA(PRINTSCREEN)>, <&kp LEFT_GUI>;

            tapping-term-ms = <300>;
        };

        TD_4: TD_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_4";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            tapping-term-ms = <300>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <3 4>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        F_8 {
            bindings = <&kp F8>;
            key-positions = <3 4>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <1>;
        };

        tabe {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <15 16>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <1>;
        };

        lshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <27 28>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        point {
            bindings = <&kp LC(KP_DOT)>;
            key-positions = <27 28>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <1>;
        };

        td_4 {
            bindings = <&TD_4>;
            key-positions = <7 8>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        ay {
            bindings = <&kp SQT>;
            key-positions = <19 20>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        td_3 {
            bindings = <&TD_3>;
            key-positions = <31 32>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y   &kp U      &kp I      &kp O    &kp P     &TD_4
&kp TAB     &kp A  &kp S  &kp D  &kp F  &kp G  &kp H   &kp J      &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&kp LSHFT   &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &TD_3
                          &TD_2  &TD_1  &mo 1  &tog 2  &kp RSHFT  &kp RCTRL
            >;
        };

        lower_layer {
            bindings = <
&kp F8      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4  &kp N5        &kp PG_UP         &kp HOME           &kp UP_ARROW  &kp END    &trans                &kp DEL
&kp CLCK    &kp NUMBER_6  &kp N7        &kp N8         &kp N9        &kp N0        &kp PAGE_DOWN     &kp LEFT           &kp DOWN      &kp RIGHT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&kp KP_DOT  &kp EQUAL     &kp MINUS     &kp PLUS       &kp KP_SLASH  &kp ASTERISK  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N8        &kp N9     &kp NON_US_BACKSLASH  &trans
                                        &kp BACKSPACE  &kp DELETE    &trans        &trans            &trans             &trans
            >;
        };

        raise_layer {
            bindings = <
&trans           &kp F1   &kp F2   &kp F3              &kp F4       &kp F5   &kp C_VOL_UP  &kp HOME     &kp PSCRN            &kp PG_UP  &kp SLCK         &kp CLCK
&mt LCTRL EQUAL  &kp F6   &kp F7   &kp F8              &kp F9       &kp F10  &kp C_MUTE    &kp LEFT     &kp UP               &kp RIGHT  &kp INS          &mt RCTRL K_APP
&kp LALT         &kp F11  &kp F12  &trans              &trans       &trans   &kp C_VOL_DN  &kp END      &kp DOWN             &kp PG_DN  &kp PAUSE_BREAK  &kp RALT
                                   &lt 2 LEFT_CONTROL  &lt 1 ENTER  &to 0    &trans        &lt 1 ENTER  &lt 2 RIGHT_CONTROL
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &kp A         &kp A         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &to 0         &none         &trans        &trans
            >;
        };
    };
};
